// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Provider {
  GOOGLE
  SPOTIFY
}


model User {
id         Int        @id @default(autoincrement())
email      String     @unique
name       String
provider   Provider
providerId String
playlists  Playlist[]
createdAt  DateTime   @default(now())
deletedAt  DateTime?
@@unique([provider, providerId])
@@index([provider, providerId])
@@map("users")
}

model Playlist {
playlistId Int      @id @default(autoincrement())
title      String
tracks     Track[]
user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
userId     Int
createdAt  DateTime @default(now())
updatedAt  DateTime @updatedAt
@@index([userId])
@@map("playlists")
}

model Track {
id         Int      @id @default(autoincrement())
title      String
artist     String
albumArt   String?
genre      String?
playlist   Playlist @relation(fields: [playlistId], references: [playlistId], onDelete: Cascade)
playlistId Int
spotifyId  String?  @map("spotify_id")
createdAt  DateTime @default(now())
@@index([playlistId])
@@map("tracks")
}
